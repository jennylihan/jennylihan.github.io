{"version":3,"file":"component---src-templates-blog-post-js-5fea5e47973722ea6331.js","mappings":"uJA+EA,IArEY,WACV,OACE,uBAAKA,UAAU,OACb,uBAAKA,UAAU,cACb,qBAAGA,UAAU,kBAAkBC,IAAI,aAAaC,KAAK,UACnD,gBAAC,EAAAC,EAAD,CACEH,UAAU,QACVI,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,MAAO,QACjCC,IAAI,uBACJC,MAAO,IACPC,QAAS,GACTC,IAAI,QAPN,sBADF,SAYA,qBAAGT,UAAU,kBAAkBC,IAAI,aAAaC,KAAK,iBACnD,gBAAC,EAAAC,EAAD,CACEH,UAAU,QACVI,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,uBACJC,MAAO,IACPC,QAAS,GACTC,IAAI,SAPN,sBADF,MAYA,qBAAGT,UAAU,kBAAkBC,IAAI,aAAaC,KAAK,aACnD,gBAAC,EAAAC,EAAD,CACEH,UAAU,QACVI,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,mBACJC,MAAO,IACPC,QAAS,GACTC,IAAI,kBAPN,sBADF,YAYA,qBAAGT,UAAU,kBAAkBC,IAAI,aAAaC,KAAK,aACnD,gBAAC,EAAAC,EAAD,CACEH,UAAU,QACVI,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,uBACJC,MAAO,IACPC,QAAS,GACTC,IAAI,kBAPN,sBADF,YAYA,qBAAGT,UAAU,kBAAkBC,IAAI,aAAaC,KAAK,WACnD,gBAAC,EAAAC,EAAD,CACEH,UAAU,QACVI,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,uBACJC,MAAO,IACPC,QAAS,GACTC,IAAI,SAPN,sBADF,c,kFCIR,UA3DyB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,gBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,gBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,2BACEtB,UAAU,YACVuB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYb,EAAKQ,YAAYH,OAC1C,yBAAIL,EAAKQ,YAAYM,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQhB,EAAKiB,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAKzB,UAAU,iBACb,sBACE8B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGjB,GACC,gBAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAASoB,OAAOC,KAAMtC,IAAI,QAApC,KACKiB,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAiB,KAAD,CAAMC,GAAIlB,EAAKmB,OAAOC,KAAMtC,IAAI,QAC7BkB,EAAKC,YAAYH,MADpB,Y","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  return (\n    <div className=\"bio\">\n      <div className=\"header-bar\">\n        <a className=\"header-link-bar\" rel=\"noreferrer\" href=\"#about\">\n          <StaticImage\n            className=\"stamp\"\n            layout=\"fixed\"\n            formats={[\"auto\", \"webp\", \"png\", \"avif\"]}\n            src=\"../images/stamp2.png\"\n            width={120}\n            quality={95}\n            alt=\"about\"\n          />\n          about\n        </a>\n        <a className=\"header-link-bar\" rel=\"noreferrer\" href=\"/JennyHan.pdf\">\n          <StaticImage\n            className=\"stamp\"\n            layout=\"fixed\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            src=\"../images/stamp1.png\"\n            width={120}\n            quality={95}\n            alt=\"resume\"\n          />\n          cv\n        </a>\n        <a className=\"header-link-bar\" rel=\"noreferrer\" href=\"#research\">\n          <StaticImage\n            className=\"stamp\"\n            layout=\"fixed\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            src=\"../images/me.png\"\n            width={120}\n            quality={95}\n            alt=\"Profile picture\"\n          />\n          research\n        </a>\n        <a className=\"header-link-bar\" rel=\"noreferrer\" href=\"#teaching\">\n          <StaticImage\n            className=\"stamp\"\n            layout=\"fixed\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            src=\"../images/stamp4.png\"\n            width={120}\n            quality={95}\n            alt=\"Profile picture\"\n          />\n          teaching\n        </a>\n        <a className=\"header-link-bar\" rel=\"noreferrer\" href=\"#design\">\n          <StaticImage\n            className=\"stamp\"\n            layout=\"fixed\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            src=\"../images/stamp3.png\"\n            width={120}\n            quality={95}\n            alt=\"design\"\n          />\n          design\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["className","rel","href","S","layout","formats","src","width","quality","alt","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug"],"sourceRoot":""}