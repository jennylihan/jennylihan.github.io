{"version":3,"file":"component---src-pages-index-js-4dfb8fcd0942158f4e41.js","mappings":"iKAyDA,IA9CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,uCACa,8BAASb,EAAOa,MAD7B,KAC6Cb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADhE,IAGE,qBAAGC,KAAI,yBAAyBZ,MAAAA,OAAA,EAAAA,EAAQa,UAAR,KAAhC,yC,oGChDV,EAAe,IAA0B,wDCsCzC,EAtBiB,WACf,OACE,2BACE,uBAAKZ,UClBU,mCDmBb,uBAAKA,UCjBY,uCDkBf,uBAAKA,UChBG,gCDiBN,uBAAKA,UCfE,iCDgBL,uBAAKa,MAAO,CAAEC,QAAS,UAErB,uBAAKV,IAAKW,EAAgBf,UCvBnB,oCDuByCQ,IAAI,SACpD,2BACE,0C,oBEuClB,EA1DkB,SAAC,GAAwB,IAAD,EAArBd,EAAqB,EAArBA,KAAMsB,EAAe,EAAfA,SACnBC,GAAY,UAAAvB,EAAKG,KAAKC,oBAAV,eAAwBoB,QAAxB,QACZC,EAAQzB,EAAK0B,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,EAAD,MACA,sBAAIL,MAAO,CAAEU,UAAU,SACpBJ,EAAMK,KAAI,SAAAC,GACT,IAAMP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE5B,UAAU,iBACV8B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYhB,KAG/B,6BAAQO,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,0B","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/images/greetings.png","webpack://gatsby-starter-blog/./src/components/Postcard.js","webpack://gatsby-starter-blog/./src/components/postcard.module.css","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","export default __webpack_public_path__ + \"static/greetings-f0bd7349145763c662ace7a7e72e2170.png\";","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport {\n  cardBox,\n  card,\n  frontDesign,\n  front,\n  greetings,\n} from \"./postcard.module.css\"\nimport greetingsImage from \"../images/greetings.png\" // Tell webpack this JS file uses this image\nconst Postcard = () => {\n  return (\n    <div>\n      <div className={cardBox}>\n        <div className={frontDesign}>\n          <div className={card}>\n            <div className={front}>\n              <div style={{ display: \"block\" }}>\n                {/* <div style={{ marginTop: \"100px\" }}></div> */}\n                <img src={greetingsImage} className={greetings} alt=\"test\" />\n                <div>\n                  <p>hello</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Postcard\n","// extracted by mini-css-extract-plugin\nexport var cardBox = \"postcard-module--cardBox--80HzF\";\nexport var greetings = \"postcard-module--greetings--1-m9d\";\nexport var frontDesign = \"postcard-module--frontDesign--O8m5l\";\nexport var shake = \"postcard-module--shake--xFpmN\";\nexport var card = \"postcard-module--card--B5WCA\";\nexport var giro = \"postcard-module--giro--2kFA2\";\nexport var front = \"postcard-module--front--FOu+g\";\nexport var back = \"postcard-module--back--TvVN5\";\nexport var frontText = \"postcard-module--front-text--5Y9cS\";\nexport var backGrid = \"postcard-module--back-grid--+Qpqt\";\nexport var backGridLeft = \"postcard-module--back-grid-left--OwTss\";\nexport var backTextLeft = \"postcard-module--back-text-left--XvnrI\";\nexport var backTextRight = \"postcard-module--back-text-right--xlvtU\";\nexport var stamp = \"postcard-module--stamp--wCSfB\";\nexport var caption = \"postcard-module--caption--AsWzo\";\nexport var type = \"postcard-module--type--MJi4O\";","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Postcard from \"../components/Postcard\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Postcard />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","style","display","greetingsImage","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}